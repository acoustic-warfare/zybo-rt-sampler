from lib.beamformer import *

from interface import config

import numpy as np

import datetime

ITERATIONS = 50

import sys

"""
Record raw data from the microphone array and save to a NumPy array
"""

def get_name(iterations):
    samples = iterations*config.N_SAMPLES
    seconds = samples/config.SAMPLE_RATE

    now=datetime.datetime.now()

    file_name = now.isoformat() + f" {config.SAMPLE_RATE}Hz {seconds}s [{samples}]" + ".npy"
    file_name = file_name.replace(" ", "_")

    return file_name

usage = f"python3 record.py <SECONDS>"

if __name__ == "__main__":
    if len(sys.argv[1:]) == 1:
        value = sys.argv[1]
        try:
            seconds = float(value)
            n_iters = int((config.SAMPLE_RATE * seconds) // config.N_SAMPLES)
            RANGE = 80
            total_data = np.zeros((config.N_MICROPHONES, n_iters*config.N_SAMPLES), dtype=np.float32)

            data = np.zeros((config.N_MICROPHONES, config.N_SAMPLES), dtype=np.float32)

            connect()
            try:
                for i in range(n_iters):
                    receive(data)
                    total_data[:,i*config.N_SAMPLES:(i+1)*config.N_SAMPLES] = data.copy()
                    n = int((i/(n_iters-1))*RANGE)
                    print(f"Recording [{'='*n}{' '*(RANGE-n)}] {round(i/(n_iters-1)*100, 2)}%", end="\r")

            finally:
                print()
                name = input("Specify filename. Leave blank for autogenerated name\n")
                if name == "":

                    name = get_name(n_iters)
                print()
                
                np.save(name, total_data)
                print(f"Recording saved to: "+name)
                disconnect()
            
        except ValueError:
            print("Value must be of type float or integer")
            print("Usage: " + usage)
            exit(1)